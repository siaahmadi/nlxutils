function timingData = mergeEV(eventFileName, listOfMasterDirectories, outputDirectory)
% the EVENT file is the first Header to be generated by Neuralynx

for dirIdx = 1:length(listOfMasterDirectories)
	[TS{dirIdx}, EventIDs{dirIdx}, TTLs{dirIdx}, Extras{dirIdx}, EventStrings{dirIdx}, Header{dirIdx}] = ...
		Nlx2MatEV(fullfile(listOfMasterDirectories{dirIdx}, eventFileName), [1 1 1 1 1], 1, 1, 1);
end


%% Fix TS
timingData = nlx.merge.internal.timing.getOffset(Header);
offset = timingData.offset;
earliest = timingData.earliest;
latest = timingData.latest;

for dirIdx = 1:length(listOfMasterDirectories)
	TS{dirIdx} = TS{dirIdx} + offset(dirIdx);
end

[TS_sorted, I_ts] = sort(cat(2, TS{:}));

EventStrings_sorted = cat(1, EventStrings{:});
EventStrings_sorted = EventStrings_sorted(I_ts);

EventIDs_sorted = cat(2, EventIDs{:});
EventIDs_sorted = EventIDs_sorted(I_ts);

TTLs_sorted = cat(2, TTLs{:});
TTLs_sorted = TTLs_sorted(I_ts);

Extras_sorted = cat(2, Extras{:});
Extras_sorted = Extras_sorted(:, I_ts);


RefHeader = Header{earliest};
RefHeader{4} = Header{latest}{4};

%% Write Output

Mat2NlxEV(fullfile(outputDirectory, eventFileName), 0, 1, 1, [1 1 1 1 1 1], TS_sorted, EventIDs_sorted, TTLs_sorted, Extras_sorted, EventStrings_sorted, RefHeader);